0001   0000             ;
0002   0000             ;   Title:   map4.asm
0003   0000             ;  Author:   Bruce E. Hall, w8bh
0004   0000             ;    Date:   22 June 2025
0005   0000             ;      HW:   IMSAI 8080esp by TheHighNibble
0006   0000             ;      SW:   TASM compiler, CPM 2.2
0007   0000             ;
0008   0000             ;   Descr:   use the MPU-B control byte to configure memory
0009   0000             ;            and display the memory map for 4 different settings
0010   0000             ;          
0011   0000             ;   Usage:   "DDT map4.hex", then "g8000".  System will halt. 
0012   0000             
0013   0000             
0014   8000             .ORG 8000H              ; must stay in RAM
0015   8000             MBCP .EQU 0F3h          ; MPU-B Control Port
0016   8000             
0017   8000             start:
0018   8000 31 00 84        LD   SP,8400h
0019   8003 21 5D 80        LD   HL, stTitle    ; "MPU-B Control Byte Test..."
0020   8006 CD 55 80        CALL printStr 
0021   8009             
0022   8009              ; now try 4 different memory configurations
0023   8009              ; and show the map for each one.  
0024   8009             
0025   8009 3E 40           LD   A,40h          ; 40h: 0000 RAM, D800 ROM
0026   800B D3 F3           OUT  (MBCP),A       ; change memory configuration
0027   800D CD 28 80        CALL map            ; and show it
0028   8010             
0029   8010 3E 80           LD   A,80h          ; 80h: 0000 ROM, D800 RAM
0030   8012 D3 F3           OUT  (MBCP),A       ; change memory configuration
0031   8014 CD 28 80        CALL map            ; and show it
0032   8017             
0033   8017 3E C0           LD   A,0C0h         ; C0h: 0000 RAM, D800 RAM
0034   8019 D3 F3           OUT  (MBCP),A       ; change memory configuration
0035   801B CD 28 80        CALL map            ; and show it
0036   801E             
0037   801E 3E 00           LD   A,0            ; 00h: 0000 ROM, D800 ROM
0038   8020 D3 F3           OUT  (MBCP),A       ; change memory configuration  
0039   8022 CD 28 80        CALL map            ; and show it
0040   8025                 
0041   8025                                     ; OS in memory is trashed, so...
0042   8025 C3 00 D8        JP   0D800h         ; cold boot via bootloader
0043   8028             
0044   8028             
0045   8028             map:
0046   8028 21 1D 81        LD   HL, stPrefix   ; start output line
0047   802B CD 55 80        CALL printStr
0048   802E 11 00 04        LD   DE, 400H       ; page size of 1K
0049   8031 06 40           LD   B, 64          ; eval 64 pages of memory (64K)
0050   8033 21 00 00        LD   HL, 0000       ; starting at 0000h
0051   8036             rt01:
0052   8036 4E              LD   C, (HL)        ; temp save memory contents
0053   8037 3E DC           LD   A, $DC         ; use test byte $DC
0054   8039 77              LD   (HL), A        ; try saving the byte
0055   803A BE              CP   (HL)           ; then read it back & compare 
0056   803B 71              LD   (HL), C        ; restore memory contents
0057   803C E5              PUSH HL             ; save memory pointer
0058   803D 28 05           JR   Z, foundRAM    ; if same, RAM was written correctly
0059   803F             foundROM:
0060   803F 21 2F 81        LD   HL, stROM      ; ROM found, so print 'R'
0061   8042 18 03           JR   rt03
0062   8044             foundRAM:
0063   8044 21 3B 81        LD   HL, stRAM      ; RAM found, so print 'W'
0064   8047             rt03:
0065   8047 CD 55 80        CALL printStr       ; print result 
0066   804A E1              POP  HL             ; restore memory pointer
0067   804B 19              ADD  HL, DE         ; point to next memory page
0068   804C 10 E8           DJNZ rt01           ; and loop until done
0069   804E 21 20 81        LD   HL, stPostfix  ; finish output
0070   8051 CD 55 80        CALL printStr
0071   8054 C9              RET                
0072   8055             
0073   8055             printStr:
0074   8055 7E              LD   A, (HL)        ; get character in the string
0075   8056 B7              OR   A              ; is it zero?
0076   8057 C8              RET  Z              ; if it is, we are done.
0077   8058 D3 02           OUT  (2),A          ; send character to console
0078   805A 23              INC  HL             ; move to next character
0079   805B 18 F8           JR   printStr       ; and loop until done
0080   805D             
0081   805D             stTitle:
0082   805D 0D 0A           .db 13,10
0083   805F 20 20 4D 50     .db "  MPU-B Control Byte Test        R=ROM, W=RAM"   ,13,10,13,10
0083   8063 55 2D 42 20 
0083   8067 43 6F 6E 74 
0083   806B 72 6F 6C 20 
0083   806F 42 79 74 65 
0083   8073 20 54 65 73 
0083   8077 74 20 20 20 
0083   807B 20 20 20 20 
0083   807F 20 52 3D 52 
0083   8083 4F 4D 2C 20 
0083   8087 57 3D 52 41 
0083   808B 4D 0D 0A 0D 
0083   808F 0A 
0084   8090 7C 20 30 30     .db "| 0000111122223333444455556666777788889999AAAABBBBCCCCDDDDEEEEFFFF |",13,10
0084   8094 30 30 31 31 
0084   8098 31 31 32 32 
0084   809C 32 32 33 33 
0084   80A0 33 33 34 34 
0084   80A4 34 34 35 35 
0084   80A8 35 35 36 36 
0084   80AC 36 36 37 37 
0084   80B0 37 37 38 38 
0084   80B4 38 38 39 39 
0084   80B8 39 39 41 41 
0084   80BC 41 41 42 42 
0084   80C0 42 42 43 43 
0084   80C4 43 43 44 44 
0084   80C8 44 44 45 45 
0084   80CC 45 45 46 46 
0084   80D0 46 46 20 7C 
0084   80D4 0D 0A 
0085   80D6 7C 20 30 34     .db "| 048C048C048C048C048C048C048C048C048C048C048C048C048C048C048C048C |",13,10,0
0085   80DA 38 43 30 34 
0085   80DE 38 43 30 34 
0085   80E2 38 43 30 34 
0085   80E6 38 43 30 34 
0085   80EA 38 43 30 34 
0085   80EE 38 43 30 34 
0085   80F2 38 43 30 34 
0085   80F6 38 43 30 34 
0085   80FA 38 43 30 34 
0085   80FE 38 43 30 34 
0085   8102 38 43 30 34 
0085   8106 38 43 30 34 
0085   810A 38 43 30 34 
0085   810E 38 43 30 34 
0085   8112 38 43 30 34 
0085   8116 38 43 20 7C 
0085   811A 0D 0A 00 
0086   811D             stPrefix:
0087   811D 7C 20 00        .db "| ",0
0088   8120             stPostfix:
0089   8120 1B 5B 33 39     .db 27,"[39m",27,"[49m"," |",13,10,0   ; restores default FG/BG colors
0089   8124 6D 1B 5B 34 
0089   8128 39 6D 20 7C 
0089   812C 0D 0A 00 
0090   812F             stROM:
0091   812F 1B 5B 34 31     .db 27,"[41m",27,"[97m",'R',0   ; show white 'R' on red background
0091   8133 6D 1B 5B 39 
0091   8137 37 6D 52 00 
0092   813B             stRAM:
0093   813B 1B 5B 34 34     .db 27,"[44m",27,"[97m",'W',0   ; show white 'W' on blue background
0093   813F 6D 1B 5B 39 
0093   8143 37 6D 57 00 
0094   8147             .ENDtasm: Number of errors = 0
