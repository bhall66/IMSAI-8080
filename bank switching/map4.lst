0001   0000             ;
0002   0000             ;   Title:   map4.asm
0003   0000             ;  Author:   Bruce E. Hall, w8bh
0004   0000             ;    Date:   18 June 2025
0005   0000             ;      HW:   IMSAI 8080esp by TheHighNibble
0006   0000             ;      SW:   TASM compiler, CPM 2.2
0007   0000             ;
0008   0000             ;   Descr:   use the MPU-B control byte to configure memory
0009   0000             ;            and display the memory map for 4 different settings
0010   0000             ;          
0011   0000             ;   Usage:   "DDT map4.asm", then "g8000".  System will halt. 
0012   0000             
0013   0000             
0014   8000             .ORG 8000H              ; must stay in RAM
0015   8000             MBCP .EQU 0F3h          ; MPU-B Control Port
0016   8000             
0017   8000             start:
0018   8000 31 00 84        LD   SP,8400h
0019   8003 21 61 80        LD   HL, stMapper   ; "Memory Mapper..."
0020   8006 CD 59 80        CALL printStr 
0021   8009             
0022   8009              ; now try 4 different memory configurations
0023   8009              ; and show the map for each one.  
0024   8009             
0025   8009 3E 00           LD   A,0            ; 00h: 0000 ROM, D800 ROM
0026   800B D3 F3           OUT  (MBCP),A       ; change memory configuration  
0027   800D CD 2C 80        CALL map            ; and show it
0028   8010             
0029   8010 3E 40           LD   A,40h          ; 40h: 0000 RAM, D800 ROM
0030   8012 D3 F3           OUT  (MBCP),A       ; change memory configuration
0031   8014 CD 2C 80        CALL map            ; and show it
0032   8017             
0033   8017 3E 80           LD   A,80h          ; 80h: 0000 ROM, D800 RAM
0034   8019 D3 F3           OUT  (MBCP),A       ; change memory configuration
0035   801B CD 2C 80        CALL map            ; and show it
0036   801E             
0037   801E 3E C0           LD   A,0C0h         ; C0h: 0000 RAM, D800 RAM
0038   8020 D3 F3           OUT  (MBCP),A       ; change memory configuration
0039   8022 CD 2C 80        CALL map            ; and show it
0040   8025             
0041   8025 21 4B 81        LD   HL,stHalted    
0042   8028 CD 59 80        CALL printStr
0043   802B 76              HALT                ; OS trashed, need cold reset
0044   802C             
0045   802C             
0046   802C             map:
0047   802C 21 21 81        LD   HL, stPrefix   ; start output line
0048   802F CD 59 80        CALL printStr
0049   8032 11 00 04        LD   DE, 400H       ; page size of 1K
0050   8035 06 40           LD   B, 64          ; eval 64 pages of memory (64K)
0051   8037 21 00 00        LD   HL, 0000       ; starting at 0000h
0052   803A             rt01:
0053   803A 4E              LD   C, (HL)        ; temp save memory contents
0054   803B 3E DC           LD   A, $DC         ; use test byte $DC
0055   803D 77              LD   (HL), A        ; try saving the byte
0056   803E BE              CP   (HL)           ; then read it back & compare 
0057   803F 71              LD   (HL), C        ; restore memory contents
0058   8040 E5              PUSH HL             ; save memory pointer
0059   8041 28 05           JR   Z, foundRAM    ; if same, RAM was written correctly
0060   8043             foundROM:
0061   8043 21 33 81        LD   HL, stROM      ; ROM found, so print 'R'
0062   8046 18 03           JR   rt03
0063   8048             foundRAM:
0064   8048 21 3F 81        LD   HL, stRAM      ; RAM found, so print 'W'
0065   804B             rt03:
0066   804B CD 59 80        CALL printStr       ; print result 
0067   804E E1              POP  HL             ; restore memory pointer
0068   804F 19              ADD  HL, DE         ; point to next memory page
0069   8050 10 E8           DJNZ rt01           ; and loop until done
0070   8052 21 24 81        LD   HL, stPostfix  ; finish output
0071   8055 CD 59 80        CALL printStr
0072   8058 C9              RET                
0073   8059             
0074   8059             
0075   8059             printStr:
0076   8059 7E              LD   A, (HL)        ; get character in the string
0077   805A B7              OR   A              ; is it zero?
0078   805B C8              RET  Z              ; if it is, we are done.
0079   805C D3 02           OUT  (2),A          ; send character to console
0080   805E 23              INC  HL             ; move to next character
0081   805F 18 F8           JR   printStr       ; and loop until done
0082   8061             
0083   8061             
0084   8061             stMapper:
0085   8061 0D 0A           .db 13,10
0086   8063 20 20 4D 50     .db "  MPU-B Control Byte Test        R=ROM, W=RAM"   ,13,10,13,10
0086   8067 55 2D 42 20 
0086   806B 43 6F 6E 74 
0086   806F 72 6F 6C 20 
0086   8073 42 79 74 65 
0086   8077 20 54 65 73 
0086   807B 74 20 20 20 
0086   807F 20 20 20 20 
0086   8083 20 52 3D 52 
0086   8087 4F 4D 2C 20 
0086   808B 57 3D 52 41 
0086   808F 4D 0D 0A 0D 
0086   8093 0A 
0087   8094 7C 20 30 30     .db "| 0000111122223333444455556666777788889999AAAABBBBCCCCDDDDEEEEFFFF |",13,10
0087   8098 30 30 31 31 
0087   809C 31 31 32 32 
0087   80A0 32 32 33 33 
0087   80A4 33 33 34 34 
0087   80A8 34 34 35 35 
0087   80AC 35 35 36 36 
0087   80B0 36 36 37 37 
0087   80B4 37 37 38 38 
0087   80B8 38 38 39 39 
0087   80BC 39 39 41 41 
0087   80C0 41 41 42 42 
0087   80C4 42 42 43 43 
0087   80C8 43 43 44 44 
0087   80CC 44 44 45 45 
0087   80D0 45 45 46 46 
0087   80D4 46 46 20 7C 
0087   80D8 0D 0A 
0088   80DA 7C 20 30 34     .db "| 048C048C048C048C048C048C048C048C048C048C048C048C048C048C048C048C |",13,10,0
0088   80DE 38 43 30 34 
0088   80E2 38 43 30 34 
0088   80E6 38 43 30 34 
0088   80EA 38 43 30 34 
0088   80EE 38 43 30 34 
0088   80F2 38 43 30 34 
0088   80F6 38 43 30 34 
0088   80FA 38 43 30 34 
0088   80FE 38 43 30 34 
0088   8102 38 43 30 34 
0088   8106 38 43 30 34 
0088   810A 38 43 30 34 
0088   810E 38 43 30 34 
0088   8112 38 43 30 34 
0088   8116 38 43 30 34 
0088   811A 38 43 20 7C 
0088   811E 0D 0A 00 
0089   8121             stPrefix:
0090   8121 7C 20 00        .db "| ",0
0091   8124             stPostfix:
0092   8124 1B 5B 33 39     .db 27,"[39m",27,"[49m"," |",13,10,0   ; restores default FG/BG colors
0092   8128 6D 1B 5B 34 
0092   812C 39 6D 20 7C 
0092   8130 0D 0A 00 
0093   8133             stROM:
0094   8133 1B 5B 34 31     .db 27,"[41m",27,"[97m",'R',0   ; show white 'R' on red background
0094   8137 6D 1B 5B 39 
0094   813B 37 6D 52 00 
0095   813F             stRAM:
0096   813F 1B 5B 34 34     .db 27,"[44m",27,"[97m",'W',0   ; show white 'W' on blue background
0096   8143 6D 1B 5B 39 
0096   8147 37 6D 57 00 
0097   814B             stHalted:
0098   814B 0D 0A 53 79     .db 13,10,"System Halted.",0
0098   814F 73 74 65 6D 
0098   8153 20 48 61 6C 
0098   8157 74 65 64 2E 
0098   815B 00 
0099   815C             .ENDtasm: Number of errors = 0
