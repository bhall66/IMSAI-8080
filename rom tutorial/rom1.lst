0001   0000             ;
0002   0000             ;   Title:   rom1.asm
0003   0000             ;  Author:   Bruce E. Hall, w8bh
0004   0000             ;    Date:   10 Jul 2025
0005   0000             ;      HW:   IMSAI8080 emulator by TheHighNibble
0006   0000             ;      SW:   TASM compiler using Z80 mnemonics (-80 option)
0007   0000             ;            
0008   0000             ;   Descr:   ROM exercise:  read a floppy disk sector
0009   0000             ;         
0010   0000                         
0011   0000             
0012   0000             DDA         .EQU    0080h       ; disk descriptor address
0013   0000             FDC         .EQU    0FDh        ; Floppy disk controller (FIF) port
0014   0000             LED         .EQU    0FFh        ; front panel LED port
0015   0000             
0016   D800             .ORG    0D800H
0017   D800             
0018   D800             
0019   D800             ; Set up a command to read the disk, execute the command, and receive result code 
0020   D800             ;
0021   D800 21 29 D8    readFD: LD      HL,cmdStr       ; source = command string
0022   D803 11 80 00            LD      DE,DDA          ; destination = 0080h
0023   D806 01 07 00            LD      BC,7            ; 7 bytes to copy  
0024   D809 ED B0               LDIR                    ; do the copy, Z80 style            
0025   D80B             
0026   D80B                     ; the disk descriptor is now initialized with a command
0027   D80B                     ; to read Drive 0/Track 0/Sector 1 to Address 0000.
0028   D80B                     ; Now inform controller where that command is located.
0029   D80B             
0030   D80B 3E 10               LD      A,10H           ; FDC cmd 10h = set disk descriptor
0031   D80D D3 FD               OUT     (FDC),A         ; and sent command
0032   D80F 21 80 00            LD      HL,DDA 
0033   D812 7D                  LD      A,L
0034   D813 D3 FD               OUT     (FDC),A         ; send LSB of disk descriptor
0035   D815 7C                  LD      A,H
0036   D816 D3 FD               OUT     (FDC),A         ; send MSB of disk descriptor
0037   D818             
0038   D818                     ; Tell the FDC to execute the command string
0039   D818             
0040   D818 AF                  XOR     A               ; cmd 0 = execute the command string
0041   D819 D3 FD               OUT     (FDC),A         ; send it
0042   D81B             
0043   D81B                     ; Poll the result byte & return when reponse is received
0044   D81B             
0045   D81B 21 81 00            LD      HL,DDA+1        ; point to result code
0046   D81E 7E          loop:   LD      A,(HL)          ; get result
0047   D81F B7                  OR      A               ; still zero = no response?
0048   D820 CA 1E D8            JP      Z,loop          ; wait until response received
0049   D823             
0050   D823                     ; now show result on the front panel LEDs
0051   D823             
0052   D823 2F                  CPL                     ; complement A for LED output
0053   D824 D3 FF               OUT     (LED),A         ; output code to front panel LEDs
0054   D826 C3 26 D8    stop:   JP      stop
0055   D829             
0056   D829             
0057   D829 21 00 00 00 cmdStr:     .db 21h,00,00,00,01,00,00h
0057   D82D 01 00 00 
0058   D830             
0059   D830             .ENDtasm: Number of errors = 0
